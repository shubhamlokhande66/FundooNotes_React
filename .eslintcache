[{"C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\index.js":"1","C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\App.js":"2","C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\reportWebVitals.js":"3","C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\components\\signUp\\signup.jsx":"4","C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\components\\signIn\\signIn.jsx":"5","C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\Service\\UserService.js":"6","C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\Pages\\ForgetPassword.jsx":"7","C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\Pages\\resetPasword\\Resetpassword.jsx":"8","C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\Pages\\DashBoard\\Dashboard.jsx":"9","C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\components\\AppBar\\Appbar.jsx":"10"},{"size":517,"mtime":1609481822944,"results":"11","hashOfConfig":"12"},{"size":1111,"mtime":1609591798636,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1609481823000,"results":"14","hashOfConfig":"12"},{"size":12519,"mtime":1609591798907,"results":"15","hashOfConfig":"12"},{"size":5984,"mtime":1609591798907,"results":"16","hashOfConfig":"12"},{"size":2688,"mtime":1609591798766,"results":"17","hashOfConfig":"12"},{"size":3706,"mtime":1609591798735,"results":"18","hashOfConfig":"12"},{"size":6827,"mtime":1609591798735,"results":"19","hashOfConfig":"12"},{"size":1636,"mtime":1609591798719,"results":"20","hashOfConfig":"12"},{"size":2909,"mtime":1609591798797,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1osk0o7",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},"C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\index.js",[],["49","50"],"C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\App.js",["51"],"C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\reportWebVitals.js",[],"C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\components\\signUp\\signup.jsx",["52","53","54","55","56","57","58","59","60","61"],"import React, { Component } from \"react\";\r\nimport \"./signup.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Card,\r\n  Snackbar,\r\n  CardContent,\r\n  CardActions,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport userServices from \"../../Service/UserService\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AccImg from \"../assets/account.svg\";\r\n\r\nconst regexValidateEmail = new RegExp(\r\n    /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$$/\r\n  );\r\n  const regexvalidatePassword = new RegExp(\r\n    /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/\r\n  );\r\n  const regexvalidaterePassword = new RegExp(\r\n    /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/\r\n  );\r\n  const regexvalidateName = new RegExp(/^[A-Z]{1}[a-z]{3,}$/);\r\n  const regexvalidateLastName = new RegExp(/^[A-Z]{1}[a-z]{3,}$/);\r\n\r\n\r\nclass Registration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      rePassword: \"\",\r\n      snackbarOpen: false,\r\n      snackbarMessage: \"\",\r\n      service: \"\",\r\n      showPassword: false,\r\n      errorValid: {\r\n        firstName: false,\r\n        lastName: false,\r\n        email: false,\r\n        password: false,\r\n      },\r\n      enable: true,\r\n      service: \"advance\",\r\n      errors: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n    };\r\n    \r\n  }\r\n\r\n  onSubmit = () => {\r\n    const errors = this.validate(this.state);\r\n    if (errors.email || this.state.email === \"\") {\r\n      this.setState({\r\n        snackbarOpen: true,\r\n        snackbarMessage: \"Please Enter the Email \",\r\n      });\r\n    } else if (this.state.password === \"\") {\r\n      this.setState({\r\n        snackbarOpen: true,\r\n        snackbarMessage: \"Please Enter the password\",\r\n      });\r\n    } else {\r\n      let data = {\r\n        \"firstName\": this.state.firstName,\r\n        \"lastName\": this.state.lastName,\r\n        \"email\": this.state.email,\r\n        \"password\": this.state.password,\r\n        \"rePassword\":this.state.rePassword,\r\n        \"service\": \"advance\",\r\n        \r\n      };\r\n\r\n      userServices\r\n        .UserRegister(data)\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            this.setState({\r\n              snackbarOpen: true,\r\n              snackbarMessage: \"Registration Successful\",\r\n            });\r\n            this.props.history.push(\"/login\");\r\n          } else {\r\n            this.setState({\r\n              snackbarOpen: true,\r\n              snackbarMessage: \"Some problem occured while Registration\",\r\n            });\r\n          }\r\n        })\r\n        .catch();\r\n    }\r\n  };\r\n  clickShowPass = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      showPassword: !this.state.showPassword,\r\n    });\r\n  };\r\n  validate = (data) => {\r\n    const errors = {};\r\n    if (!regexValidateEmail.test(data.email))\r\n      errors.email = \"Invalid email\";\r\n    return errors;\r\n  };\r\n\r\n  onchangeFirstName = (event) => {\r\n      this.setState({\r\n        firstName: event.target.value,\r\n      });\r\n      let errors = this.state.errors;\r\n      let validate = false;\r\n    if (!regexvalidateName.test(this.state.firstName)) {\r\n        errors.firstName = \"eg:Shubham\";\r\n        validate = true;\r\n    } else {\r\n        errors.firstName = \"\";\r\n     } this.setState({\r\n        snackbarOpen: true,\r\n        snackbarMessage: \"First Latters & reamining Small \",\r\n        errorValid: { firstName: validate },\r\n      errors: { firstName: errors.firstName },\r\n      });\r\n    \r\n  };\r\n\r\n  onchangeLastName = (event) => {\r\n   this.setState({\r\n        lastName: event.target.value,\r\n      });\r\n      let errors = this.state.errors;\r\n      let validate = false;\r\n    if (!regexvalidateLastName.test(this.state.lastName)) {\r\n        errors.lastName = \"eg:Lokhande\";\r\n        validate = true;\r\n    } else {\r\n        errors.lastName = \"\";\r\n    }this.setState({\r\n        snackbarOpen: true,\r\n        snackbarMessage: \"First Latters & reamining Small  \",\r\n        errorValid: { lastName: validate },\r\n        errors: { lastName: errors.lastName },\r\n      });\r\n    \r\n  };\r\n  onchangeEmail = (event) => {\r\n   this.setState({\r\n        email: event.target.value,\r\n      });\r\n      let errors = this.state.errors;\r\n      let validate = false;\r\n    if (!regexValidateEmail.test(this.state.email)) {\r\n        errors.email = \"eg:shubhamlokhande@gmail.com\";\r\n        validate = true;\r\n    } else {\r\n        errors.email = \"\";\r\n    }  this.setState({\r\n        snackbarOpen: true,\r\n        snackbarMessage: \"All latters Should be Small\",\r\n        errorValid: { email: validate },\r\n        errors: { email: errors.email },\r\n      });\r\n    \r\n  };\r\n \r\n\r\n  onchangePassword = (event) => {\r\n   this.setState({\r\n        password: event.target.value,\r\n      });\r\n      let errors = this.state.errors;\r\n      let validate = false;\r\n    if (!regexvalidatePassword.test(this.state.password)) {\r\n        errors.password = \"eg:Shubham@123\";\r\n        validate = true;\r\n    } else {\r\n        errors.password = \"\";\r\n    }this.setState({\r\n        snackbarOpen: true,\r\n        snackbarMessage: \"First latters Caps and Password should be MIN 8 & MAX 20 Latters\",\r\n        errorValid: { password: validate },\r\n        errors: { password: errors.password },\r\n      });\r\n    \r\n  };\r\n\r\n  onchangeRePassword = (event) => {\r\n    this.setState({\r\n        rePassword: event.target.value,\r\n      });\r\n      let errors = this.state.errors;\r\n      let validate = false;\r\n    if (!regexvalidaterePassword.test(this.state.rePassword)) {\r\n        errors.rePassword = \"eg:Shubham@123\";\r\n        validate = true;\r\n    } else {\r\n        errors.rePassword = \"\";\r\n    }this.setState({\r\n        snackbarOpen: true,\r\n        snackbarMessage: \"First latters Caps and Password should be MIN 8 & MAX 20 Latters\",\r\n        errorValid: { rePassword: validate },\r\n        errors: { rePassword: errors.rePassword },\r\n      });\r\n    \r\n  };\r\n\r\n  checkPassword() {\r\n    if (this.state.password === this.state.rePassword) {\r\n      this.setState({ snackbarOpen: true, snackbarMessage: \"done\" });\r\n    } else {\r\n      this.setState({\r\n        snackbarOpen: true,\r\n        snackbarMessage: \"enter same password\",\r\n      });\r\n    }\r\n  }\r\n\r\n  SnackbarClose = (e) => {\r\n    this.setState({ snackbarOpen: false });\r\n  };\r\n\r\n  handleCloseSnackbar = () => {\r\n    this.setState({ snackbarOpen: false });\r\n  };\r\n  login = () => {\r\n    this.props.history.push(\"/login\");\r\n  };\r\n  render() {\r\n    return (\r\n        <div className=\"registration\">\r\n        <div elevation={0} className=\"signupPage\">\r\n          <div className=\"header\">\r\n            <span className=\"inlineTitle\">\r\n            <Typography className=\"app_name\" variant=\"h5\" color=\"textSecondary\">\r\n              <span style={{ color: \"#0606f8\" }}>F</span>\r\n              <span style={{ color: \"#d10303\" }}>u</span>\r\n              <span style={{ color: \"#f0b000\" }}>n</span>\r\n              <span style={{ color: \"#0606f8\" }}>d</span>\r\n              <span style={{ color: \"green\" }}>o</span>\r\n              <span style={{ color: \"#d10303\" }}>o</span>\r\n            </Typography>\r\n            </span>\r\n            <div className=\"headerText\">Create your Fundoo Account </div>\r\n            \r\n            </div>\r\n          <div className=\"container\">\r\n            <form className=\"form\">\r\n              <div className=\"inputs\">\r\n                <Snackbar\r\n                  anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"center\",\r\n                  }}\r\n                  open={this.state.snackbarOpen}\r\n                  autoHideDuration={3000}\r\n                  onClose={() => this.setState({ snackbarOpen: false })}\r\n                  message={this.state.snackbarMessage}\r\n                ></Snackbar>\r\n                <div className=\"inputField\">\r\n                  <TextField\r\n                  autoCapitalize=\"off\"\r\n                  name=\"firstName\"\r\n                    label=\"First Name\"\r\n                    variant=\"outlined\"\r\n                    value={this.state.firstName}\r\n                    onChange={this.onchangeFirstName}\r\n                    error={this.state.errorValid.firstName}\r\n                    placeholder=\"firstName\"\r\n                    helperText={this.state.errors[\"firstName\"]}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                  />\r\n                   </div>\r\n                <div className=\"inputField\">\r\n                  <TextField\r\n                   fullWidth\r\n                    name=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    variant=\"outlined\"\r\n                    value={this.state.lastName}\r\n                    onChange={this.onchangeLastName}\r\n                    error={this.state.errorValid.lastName}\r\n                    placeholder=\"lastName\"\r\n                    helperText={this.state.errors[\"lastName\"]}\r\n                    type=\"text\"\r\n                  />\r\n                </div>\r\n                </div>\r\n              <div className=\"inputs\">\r\n                <div className=\"inputField\">\r\n                  <TextField\r\n                    fullWidth\r\n                 \r\n                    value={this.state.email}\r\n                    onChange={this.onchangeEmail}\r\n                    id=\"input-with-icon-textfield\"\r\n                    variant=\"outlined\"\r\n                    label=\"email\"\r\n                    error={this.state.errorValid.email}\r\n                    placeholder=\"email\"\r\n                    helperText={this.state.errors[\"email\"]}\r\n                    type=\"text\"\r\n                    \r\n                  />\r\n                </div>\r\n                </div>\r\n              <div className=\"inputs\">\r\n                <div className=\"inputField\">\r\n                  <TextField\r\n                    id=\"password\"\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    fullWidth\r\n                    value={this.state.password}\r\n                    onChange={this.onchangePassword}\r\n                    error={this.state.errorValid.password}\r\n                    placeholder=\"password\"\r\n                    helperText={this.state.errors[\"password\"]}\r\n                    type=\"text\"\r\n                    type={this.state.showPassword ? \"text\" : \"password\"}\r\n                  />\r\n                   </div>\r\n                <div className=\"inputField\">\r\n                  <TextField\r\n                   \r\n                    id=\"password\"\r\n                    variant=\"outlined\"\r\n                    type=\"rePassword\"\r\n                    fullWidth\r\n                    label=\"Confirm-Password\"\r\n                    value={this.state.rePassword}\r\n                    onChange={this.onchangeRePassword}\r\n                    error={this.state.errorValid.rePassword}\r\n                    placeholder=\"rePassword\"\r\n                    helperText={this.state.errors[\"rePassword\"]}\r\n                    type=\"text\"\r\n                    type={this.state.showPassword ? \"text\" : \"password\"}\r\n                  />\r\n                </div>\r\n                </div>\r\n              <span className=\"checkBoxInputs\">\r\n                <Checkbox\r\n                  onClick={this.clickShowPass}\r\n                  color=\"primary\"\r\n                  className=\"showPass\"\r\n                />\r\n                Show Password\r\n              </span>\r\n              <div className=\"footerButtons\">\r\n                <div className=\"signInLink\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    onClick ={(e)=> this.login(e)}>\r\n                    Sign In insted\r\n                  </Button>\r\n                </div>\r\n                <div className=\"nextButton\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={(e) => this.onSubmit(e)}\r\n                    primary\r\n                  >\r\n                    Next\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <div className=\"regImg\">\r\n              <img src={AccImg} alt=\"\" />\r\n              <p className=\"ImgText\">\r\n                {\" \"}\r\n                One account. All of Fundoo working for you.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Registration);","C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\components\\signIn\\signIn.jsx",["62","63","64"],"import React, { useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Services from \"../../Service/UserService\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport \"./signIn.css\";\r\n\r\nexport default class signIn extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    emailError: \"\",\r\n    emailFlag: false,\r\n    passwordError: \"\",\r\n    passwordFlag: false,\r\n    showPassword: false,\r\n    snackbarOpen: false,\r\n      snackbarMessage: \"\",\r\n  };\r\n  }\r\n\r\n  nextPath(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  \r\n\r\n  clickShowPass = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      showPassword: !this.state.showPassword,\r\n    });\r\n  };\r\n\r\n  change = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  validate = () => {\r\n    let isError = false;\r\n    const errors = {\r\n      emailError: \"\",\r\n      emailFlag: false,\r\n      passwordError: \"\",\r\n      passwordFlag: false,\r\n    };\r\n\r\n    if (this.state.email.length == 0) {\r\n      errors.emailFlag = true;\r\n      isError = true;\r\n      errors.emailError = \"Enter your Email \";\r\n    }\r\n    if (!/[a-zA-Z0-9._]+[@]{1}[a-zA-Z120-9]*[.]{1}[a-zA-Z]*$/.test(this.state.email)) {\r\n      errors.emailFlag = true;\r\n      isError = true;\r\n      errors.emailError = \"Please Enter Correct Email\";\r\n    }\r\n    if (this.state.password.length == 0) {\r\n      errors.passwordFlag = true;\r\n      isError = true;\r\n      errors.passwordError = \"Enter Password\";\r\n    }\r\n\r\n    this.setState({\r\n      ...errors,\r\n    });\r\n\r\n    return isError;\r\n  };\r\n  SnackbarClose = (e) => {\r\n    this.setState({ snackbarOpen: false });\r\n  };\r\n\r\n  handleCloseSnackbar = () => {\r\n    this.setState({ snackbarOpen: false });\r\n  };\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const err = this.validate();\r\n    if (!err) {\r\n      this.setState({\r\n        email: \"\",\r\n        emailFlag: false,\r\n        emailError: \"\",\r\n        password: \"\",\r\n        passwordFlag: false,\r\n        passwordError: \"\",\r\n      });\r\n      let loginData = {\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      };\r\n      Services\r\n        .userlogin(loginData)\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            this.setState({\r\n              snackbarOpen: true,\r\n              snackbarMessage: \"Login Succesfully.\",\r\n            });\r\n            localStorage.setItem(\"token\", response.data.id);\r\n            setTimeout(() => {\r\n              this.props.history.push(\"/appbar\");\r\n            }, 2000);\r\n          } else {\r\n            this.setState({\r\n              snackbarOpen: true,\r\n              snackbarMessage: \"Enter correct credentials\",\r\n            });\r\n          }\r\n        })\r\n        .catch();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <div elevation={0} className=\"page\">\r\n          <span className=\"inlineTitle\">\r\n            <b>\r\n              <font color=\"#1976d2\">F</font>\r\n              <font color=\"#e53935\">u</font>\r\n              <font color=\"#ffb74d\">n</font>\r\n              <font color=\"#1976d2\">d</font>\r\n              <font color=\"#388e3c\">o</font>\r\n              <font color=\"#e53935\">o</font>\r\n            </b>\r\n          </span>\r\n          <span className=\"signIn\">Sign in</span>\r\n          Use your Fundoo Account\r\n          <form className=\"loginForm\">\r\n          <Snackbar\r\n                  anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"center\",\r\n                  }}\r\n                  open={this.state.snackbarOpen}\r\n                  autoHideDuration={3000}\r\n                  onClose={() => this.setState({ snackbarOpen: false })}\r\n                  message={this.state.snackbarMessage}\r\n                ></Snackbar>\r\n            <div className=\"inputfield\">\r\n              <TextField\r\n                className=\"input\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                helperText={this.state.emailError}\r\n                error={this.state.emailFlag}\r\n                onChange={(e) => this.change(e)}\r\n              />\r\n            </div>\r\n            <div className=\"passField\">\r\n              <TextField\r\n                className=\"input\"\r\n                label=\"Password\"\r\n                type={this.state.showPassword ? \"text\" : \"password\"}\r\n                variant=\"outlined\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={(e) => this.change(e)}\r\n                error={this.state.passwordFlag}\r\n                helperText={this.state.passwordError}\r\n              />\r\n               \r\n            </div>\r\n            <span className=\"checkBox\">\r\n                <Checkbox\r\n                  onClick={this.clickShowPass}\r\n                  color=\"primary\"\r\n                  className=\"showPass\"\r\n                />\r\n                Show Password\r\n              </span>\r\n            <div className=\"forgetPassword\">\r\n              <Button color=\"primary\" onClick={() => this.nextPath('../forgotPassword')}>Forgot password?</Button>\r\n            </div>\r\n            <span className=\"footer\">\r\n              <div className=\"button\">\r\n                <Button color=\"primary\" onClick={() => this.nextPath('../registration')}>\r\n                  Create account\r\n                </Button>\r\n              </div>\r\n              <div className=\"button\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={(e) => this.onSubmit(e)}>\r\n                  Sign In\r\n                </Button>\r\n              </div>\r\n            </span>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\Service\\UserService.js",["65"],"import axios from 'axios'\r\n\r\n\r\n let userlogin = (data) => {\r\n    const URL = \"http://fundoonotes.incubation.bridgelabz.com/api/user/login\";\r\n    console.log(\"This is from service class\", data);\r\n    return axios.post(`${URL}`, data)\r\n  };\r\n\r\n let UserRegister = (data) => {\r\n    const URL = \"http://fundoonotes.incubation.bridgelabz.com/api/user/userSignUp\"\r\n    return axios.post( `${URL}`, data)\r\n\r\n\r\n    \r\n}\r\nlet ForgetPassword = (data) => {\r\n   const URL = \"http://fundoonotes.incubation.bridgelabz.com/api/user/reset\"\r\n   return axios.post( `${URL}`, data)\r\n \r\n   \r\n}\r\n// let resetPassword = (data ,token) => {\r\n//    const URL = \"http://fundoonotes.incubation.bridgelabz.com/api/user/reset-password\"\r\n//    return axios.post( `${URL}`, data ,token)\r\n   \r\n \r\n// }\r\n\r\nlet resetPassword = (data, token) => {\r\n   console.log(data,token)\r\n   const URL = \"http://fundoonotes.incubation.bridgelabz.com/api\"\r\n return axios.post(`${URL}/user/reset-password`, data, {\r\n   headers: {\r\n     Authorization: `${token}`,\r\n   },\r\n });\r\n};\r\n\r\nexport default { UserRegister , userlogin ,ForgetPassword , resetPassword }\r\n\r\n\r\n\r\n","C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\Pages\\ForgetPassword.jsx",["66"],"import React from \"react\";\r\nimport \"./Forget.css\";\r\nimport userServices from \"../Service/UserService\";\r\nimport { TextField, Card } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nclass ForgetPassword extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      snackbarMsg: \"\",\r\n      snackbarOpen: false,\r\n      errs: {},\r\n    };\r\n  }\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    let errs = {};\r\n    let formIsValid = true;\r\n    const errors = this.validate(this.state);\r\n    if (errors.email || this.state.email === \"\") {\r\n      this.setState({\r\n        snackbarOpen: true,\r\n        snackbarMsg: \"Enter proper email-ID.   \",\r\n      });\r\n      formIsValid = false;\r\n      errs[\"email\"] = \"* required  valid mail id\";\r\n    } else {\r\n      let sendData = {\r\n        \"email\": this.state.email,\r\n      };\r\n\r\n      userServices.ForgetPassword(sendData)\r\n        .then((response) => {\r\n          if (response === 200) {\r\n            this.setState({\r\n              snackbarOpen: true,\r\n              snackbarMsg: \"Check your E-Mail\",\r\n            });\r\n            this.props.history.push(\"/login\");\r\n          } else {\r\n            this.setState({\r\n              snackbarOpen: true,\r\n              snackbarMsg: \"Link Sent Your Resgister EmailID\",\r\n            });\r\n          }\r\n        })\r\n        .catch();\r\n          \r\n        \r\n    }\r\n  };\r\n\r\n  validate = (data) => {\r\n    const errors = {};\r\n    if (!/([A-Z0-9a-z_-][^@])+?@[^$#<>?]+?\\.[\\w]{2,4}/.test(data.email))\r\n      errors.email = \"Invalid email\";\r\n    return errors;\r\n  };\r\n\r\n  onchangeEmail = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"forget_Form\">\r\n        <Card class=\"forget_Container\">\r\n          <Typography className=\"app_name\" variant=\"h5\" color=\"textSecondary\">\r\n          <span style={{ color: \"#0606f8\" }}>F</span>\r\n              <span style={{ color: \"#d10303\" }}>u</span>\r\n              <span style={{ color: \"#f0b000\" }}>n</span>\r\n              <span style={{ color: \"#0606f8\" }}>d</span>\r\n              <span style={{ color: \"green\" }}>o</span>\r\n              <span style={{ color: \"#d10303\" }}>o</span>\r\n          </Typography>\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\",\r\n            }}\r\n            open={this.state.snackbarOpen}\r\n            autoHideDuration={3000}\r\n            onClose={() => this.setState({ snackbarOpen: false })}\r\n            message={this.state.snackbarMsg}\r\n          ></Snackbar>\r\n\r\n          <div className=\"login\"> Find Your Email</div>\r\n          <div className=\"enterEmail\">Enter your registered Email</div>\r\n\r\n          <div className=\"set_Div\" data-test=\"EMAIL\">\r\n            <TextField\r\n              required\r\n              variant=\"outlined\"\r\n              label=\"Email\"\r\n              type=\"text\"\r\n              id=\"emailForg\"\r\n              value={this.state.email}\r\n              error={this.state.errs[\"email\"]}\r\n              helperText={this.state.errs[\"email\"]}\r\n              onChange={this.onchangeEmail}\r\n            />\r\n          </div>\r\n          <div className=\"set_Button\">\r\n            <Button\r\n              id=\"styled_component\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={this.onSubmit}\r\n            >\r\n              NEXT\r\n            </Button>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgetPassword;","C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\Pages\\resetPasword\\Resetpassword.jsx",["67"],"import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import CloseIcon from \"@material-ui/icons/Close\";\r\nimport userServices from \"../../Service/UserService\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { IconButton, Card, CardContent } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./ResetPassword.css\";\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      helperText: \"\",\r\n      error: null,\r\n      username: \"\",\r\n      userdata: [],\r\n      show: false,\r\n      login: \"Reset Password\",\r\n      next: false,\r\n      password: \"\",\r\n      helperTextpassowrd: \"\",\r\n      confirmPassword: \"\",\r\n      helperTextCpassowrd: \"\",\r\n      snackbaropen: false,\r\n      snackbarmsg: \"\",\r\n      confirmpassword: \"\",\r\n      pass: null,\r\n      conformPasswordFlag: false,\r\n        conformPasswordError: \"\",\r\n        passwordFlag: false,\r\n        passwordError: \"\",\r\n        password: \"\",\r\n        conformPassword: \"\",\r\n    };\r\n  }\r\n\r\n  Reset = (e) => {\r\n    e.preventDefault();\r\n    const err = this.validator();\r\n    if (!err) {\r\n      this.setState({\r\n        conformPasswordFlag: false,\r\n        conformPasswordError: \"\",\r\n        passwordFlag: false,\r\n        passwordError: \"\",\r\n        password: \"\",\r\n        conformPassword: \"\",\r\n      });\r\n      let resetPasswordData = {\r\n        newPassword: this.state.password,\r\n      };\r\n      userServices\r\n        .resetPassword(resetPasswordData, this.token).then((result) => {\r\n          let obj = JSON.stringify(result);\r\n          console.log(\"Password reset successful\" + obj);\r\n          this.nextPath(\"../login\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Password reset Failed\" + error);\r\n        });\r\n    } else {\r\n      console.log(\"Reset Failed\");\r\n    }\r\n  };\r\n\r\n  // Reset = () => {\r\n  //   this.validator();\r\n  //   let data = {\r\n  //     newPassword: this.state.password,\r\n  //   };\r\n  //   const id = JSON.parse(localStorage.getItem(\"id\"));\r\n  //   if (this.state.helperTextpassowrd === \"\") {\r\n  //     if (this.state.pass === true) {\r\n  //       userServices.resetPasword(data, id).then((response) => {\r\n  //         if (response.statusText === \"No Content\") {\r\n  //           this.setState({\r\n  //             snackbaropen: true,\r\n  //             snackbarmsg: \"Succefully changed.\",\r\n  //           });\r\n  //           this.props.history.push({\r\n  //             pathname: \"/login\",\r\n  //           });\r\n  //         } else {\r\n  //           this.setState({\r\n  //             snackbarmsg: \"Password not successfull\",\r\n  //             snackbaropen: true,\r\n  //           });\r\n  //         }\r\n  //       });\r\n  //     }\r\n  //   } else {\r\n  //     this.setState({\r\n  //       snackbarmsg: \"Make sure password and confirm is correct\",\r\n  //       snackbaropen: true,\r\n  //     });\r\n  //   }\r\n  // };\r\n  validator = () => {\r\n    if (this.state.password !== \"\") {\r\n      if (\r\n        /[@#$%^&*()_+!]/.test(this.state.password) &&\r\n        /[a-z]/.test(this.state.password) &&\r\n        /[0-9]/.test(this.state.password) &&\r\n        /[A-Z]/.test(this.state.password)\r\n      ) {\r\n        this.setState({\r\n          password: this.state.password,\r\n          helperTextpassowrd: \"\",\r\n          // error: false\r\n        });\r\n      } else {\r\n        this.setState({\r\n          helperTextpassowrd: \"Min 8 character\",\r\n          error: true,\r\n          password: this.state.password,\r\n        });\r\n      }\r\n    } else if (this.state.password === \"\") {\r\n      this.setState({\r\n        helperTextpassowrd: \"Enter the password\",\r\n        error: true,\r\n        password: this.state.password,\r\n      });\r\n    }\r\n    if (this.state.confirmpassword === \"\") {\r\n      this.setState({\r\n        helperTextCpassowrd: \"Enter the confirm password\",\r\n        error: true,\r\n        confirmpassword: this.state.confirmpassword,\r\n      });\r\n    } else {\r\n      this.checkPassword();\r\n    }\r\n  };\r\n\r\n  //close snackbar\r\n  handleClose = (event) => {\r\n    this.setState({ snackbaropen: false });\r\n  };\r\n  onchangePassword = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  onchangePasswordagain = (event) => {\r\n    this.setState({\r\n      confirmpassword: event.target.value,\r\n    });\r\n  };\r\n\r\n  checkPassword = () => {\r\n    if (this.state.password === this.state.confirmpassword) {\r\n      this.setState({\r\n        snackbaropen: true,\r\n        snackbarmsg: \"Password changed\",\r\n        pass: true,\r\n      });\r\n      this.setState({\r\n        confirmpassword: this.state.confirmpassword,\r\n        helperTextpassowrd: \"\",\r\n        error: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        snackbaropen: true,\r\n        snackbarmsg: \"enter same password\",\r\n        pass: false,\r\n      });\r\n    }\r\n  };\r\n  login = () => {\r\n    this.props.history.push(\"/login\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"login_Form\">\r\n        <Card class=\"login_Container\">\r\n          <CardContent>\r\n            <Typography className=\"app_name\" variant=\"h5\" color=\"textSecondary\">\r\n            <span style={{ color: \"#0606f8\" }}>F</span>\r\n              <span style={{ color: \"#d10303\" }}>u</span>\r\n              <span style={{ color: \"#f0b000\" }}>n</span>\r\n              <span style={{ color: \"#0606f8\" }}>d</span>\r\n              <span style={{ color: \"green\" }}>o</span>\r\n              <span style={{ color: \"#d10303\" }}>o</span>\r\n            </Typography>\r\n\r\n            <div className=\"login\">Reset Password</div>\r\n            <div className=\"emailAndPass\">\r\n              <TextField\r\n                hintText=\"Password\"\r\n                floatingLabelText=\"Password\"\r\n                id=\"newPass\"\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                label=\"NewPassword\"\r\n                helperText={this.state.helperTextpassowrd}\r\n                error={this.state.helperTextpassowrd}\r\n                onChange={this.onchangePassword}\r\n              />\r\n            </div>\r\n            <div className=\"emailAndPass\">\r\n              <TextField\r\n                hintText=\"Password\"\r\n                floatingLabelText=\"Password\"\r\n                id=\"confPassword\"\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                label=\"Re-enter New Password\"\r\n                helperText={this.state.helperTextCpassowrd}\r\n                error={this.state.helperTextCpassowrd}\r\n                onChange={this.onchangePasswordagain}\r\n              />\r\n            </div>\r\n            <div className=\"forget_style\" onClick={this.login}>\r\n              <span>Login</span>\r\n            </div>\r\n            <div className=\"set_Button\">\r\n              <Button\r\n                id=\"styled_component\"\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={(e) => this.Reset(e)}\r\n              >\r\n                Change Password\r\n              </Button>\r\n            </div>\r\n\r\n            <Snackbar\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"center\",\r\n              }}\r\n              open={this.state.snackbaropen}\r\n              autoHideDuration={3000}\r\n              onClose={this.handleClose}\r\n              message={this.state.snackbarmsg}\r\n              action={[\r\n                <IconButton\r\n                  key=\"close\"\r\n                  arial-label=\"close\"\r\n                  color=\"inherit\"\r\n                  onClick={this.handleClose}\r\n                >\r\n                  {/* <CloseIcon /> */}\r\n                </IconButton>,\r\n              ]}\r\n            ></Snackbar>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ResetPassword;","C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\Pages\\DashBoard\\Dashboard.jsx",[],"C:\\Users\\sai\\fellowship\\FundooNotesReact\\fundoo-notes\\src\\components\\AppBar\\Appbar.jsx",["68"],"import React from \"react\";\r\nimport \"./Appbar.css\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport icon from \"../assets/keepIcon.png\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SettingsSharpIcon from '@material-ui/icons/SettingsOutlined';\r\nimport DnsRoundedIcon from \"@material-ui/icons/DnsRounded\";\r\nimport ReplayOutlinedIcon from \"@material-ui/icons/ReplayOutlined\";\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircle';\r\nimport AppsRoundedIcon from \"@material-ui/icons/AppsRounded\";\r\n\r\nexport default function toolBar() {\r\n  return (\r\n    <div className=\"main\">\r\n      <AppBar position=\"fixed\" color=\"transparent\" >\r\n        <Toolbar className=\"topBar\">\r\n          <div className=\"startOptions\">\r\n            <div className=\"menuButton\">\r\n              <IconButton aria-label=\"open drawer\">\r\n                <MenuIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className=\"headerIcon\">\r\n              <img className=\"headerIcon\" src={icon} />\r\n            </div>\r\n            <div className=\"headerTitle\">Fundoo</div>\r\n          </div>\r\n\r\n          <div className=\"search\">\r\n            <div className=\"searchIcon\">\r\n              <div className=\"searchIcon\">\r\n                <SearchIcon />\r\n              </div>\r\n            </div>\r\n            <InputBase\r\n              className=\"searchInput\"\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: \"inputRoot\",\r\n                input: \"inputInput\",\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div>\r\n          <div className=\"buttonContainer\">\r\n            <div className=\"button\">\r\n              <IconButton aria-label=\"open drawer\">\r\n                <ReplayOutlinedIcon />\r\n              </IconButton>\r\n            </div>\r\n\r\n            <div className=\"button\">\r\n              <IconButton aria-label=\"open drawer\">\r\n                <DnsRoundedIcon />\r\n              </IconButton>\r\n            </div>\r\n\r\n            <div className=\"button\">\r\n              <IconButton aria-label=\"open drawer\">\r\n                <SettingsSharpIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div class=\"appsContainer\">\r\n            <div className=\"button\">\r\n              <IconButton aria-label=\"open drawer\">\r\n                <AppsRoundedIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className=\"button\">\r\n              <IconButton aria-label=\"open drawer\">\r\n                <AccountCircleOutlinedIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":12},{"ruleId":"73","severity":1,"message":"77","line":7,"column":3,"nodeType":"75","messageId":"76","endLine":7,"endColumn":7},{"ruleId":"73","severity":1,"message":"78","line":9,"column":3,"nodeType":"75","messageId":"76","endLine":9,"endColumn":14},{"ruleId":"73","severity":1,"message":"79","line":10,"column":3,"nodeType":"75","messageId":"76","endLine":10,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":18,"column":12,"nodeType":"82","messageId":"83","endLine":18,"endColumn":13,"suggestions":"84"},{"ruleId":"80","severity":1,"message":"81","line":18,"column":28,"nodeType":"82","messageId":"83","endLine":18,"endColumn":29,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":50,"column":7,"nodeType":"88","messageId":"89","endLine":50,"endColumn":14},{"ruleId":"90","severity":1,"message":"91","line":329,"column":21,"nodeType":"92","endLine":329,"endColumn":32},{"ruleId":"90","severity":1,"message":"91","line":330,"column":21,"nodeType":"92","endLine":330,"endColumn":73},{"ruleId":"90","severity":1,"message":"91","line":346,"column":21,"nodeType":"92","endLine":346,"endColumn":32},{"ruleId":"90","severity":1,"message":"91","line":347,"column":21,"nodeType":"92","endLine":347,"endColumn":73},{"ruleId":"73","severity":1,"message":"93","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":53,"column":33,"nodeType":"96","messageId":"89","endLine":53,"endColumn":35},{"ruleId":"94","severity":1,"message":"95","line":63,"column":36,"nodeType":"96","messageId":"89","endLine":63,"endColumn":38},{"ruleId":"97","severity":1,"message":"98","line":40,"column":1,"nodeType":"99","endLine":40,"endColumn":76},{"ruleId":"73","severity":1,"message":"100","line":28,"column":7,"nodeType":"75","messageId":"76","endLine":28,"endColumn":18},{"ruleId":"86","severity":1,"message":"101","line":34,"column":9,"nodeType":"88","messageId":"89","endLine":34,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":28,"column":15,"nodeType":"104","endLine":28,"endColumn":56},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["107","108"],["109","110"],"no-dupe-keys","Duplicate key 'service'.","ObjectExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'formIsValid' is assigned a value but never used.","Duplicate key 'password'.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"messageId":"111","fix":"112","desc":"113"},{"messageId":"114","fix":"115","desc":"116"},{"messageId":"111","fix":"117","desc":"113"},{"messageId":"114","fix":"118","desc":"116"},"removeEscape",{"range":"119","text":"120"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"121","text":"122"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"123","text":"120"},{"range":"124","text":"122"},[455,456],"",[455,455],"\\",[471,472],[471,471]]